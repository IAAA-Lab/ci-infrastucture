version: "2"

services:
  portus:
    image: opensuse/portus:head
    environment:
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${ACCESS_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/domain.key
      - PORTUS_PASSWORD=${ACCESS_PASSWORD}
      - PORTUS_SIGNUP_ENABLED=false
      - PORTUS_DELETE_ENABLED=true

      # SSL
      - PORTUS_PUMA_TLS_KEY=/certificates/domain.key
      - PORTUS_PUMA_TLS_CERT=/certificates/domain.crt

      # NGinx is serving the assets instead of Puma. If you want to change this,
      # uncomment this line.
      #- RAILS_SERVE_STATIC_FILES='true'
    # ports:
    #   - 3000:3000
    links:
      - db
    volumes:
      - certificates:/certificates:ro
      - static:/srv/Portus/public

  background:
    image: opensuse/portus:head
    depends_on:
      - portus
      - db
    environment:
      # Theoretically not needed, but cconfig's been buggy on this...
      - CCONFIG_PREFIX=PORTUS
      - PORTUS_MACHINE_FQDN_VALUE=${MACHINE_FQDN}

      # DB. The password for the database should definitely not be here. You are
      # probably better off with Docker Swarm secrets.
      - PORTUS_DB_HOST=db
      - PORTUS_DB_DATABASE=portus_production
      - PORTUS_DB_PASSWORD=${ACCESS_PASSWORD}
      - PORTUS_DB_POOL=5

      # Secrets. It can possibly be handled better with Swarm's secrets.
      - PORTUS_SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - PORTUS_KEY_PATH=/certificates/domain.key
      - PORTUS_PASSWORD=${ACCESS_PASSWORD}
      - PORTUS_SIGNUP_ENABLED=false
      - PORTUS_DELETE_ENABLED=true

      - PORTUS_BACKGROUND=true
    links:
      - db
    volumes:
      - certificates:/certificates:ro

  db:
    image: library/mariadb:10.0.23
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    environment:
      - MYSQL_DATABASE=portus_production

      # Again, the password shouldn't be handled like this.
      - MYSQL_ROOT_PASSWORD=${ACCESS_PASSWORD}
    volumes:
      - db:/var/lib/mysql

  registry:
    image: registry:2.6
    environment:
      # Authentication
      REGISTRY_AUTH_TOKEN_REALM: https://${MACHINE_FQDN}/v2/token
      REGISTRY_AUTH_TOKEN_SERVICE: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ISSUER: ${MACHINE_FQDN}
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /secrets/domain.crt

      REGISTRY_STORAGE_DELETE_ENABLED: "true"

      # SSL
      REGISTRY_HTTP_TLS_CERTIFICATE: /secrets/domain.crt
      REGISTRY_HTTP_TLS_KEY: /secrets/domain.key

      # Portus endpoint
      REGISTRY_NOTIFICATIONS_ENDPOINTS: >
        - name: portus
          url: https://${MACHINE_FQDN}/v2/webhooks/events
          timeout: 2000ms
          threshold: 5
          backoff: 1s
    volumes:
      - registry:/var/lib/registry
      - certificates:/secrets:ro
    links:
      - portus:portus

  nginx:
    build: ./nginx
    image: ${MACHINE_FQDN}/infrastucture/portus-nginx
    volumes:
      - certificates:/secrets:ro
      - static:/srv/Portus/public:ro
    ports:
      - 80:80
      - 443:443
    links:
      - registry:registry
      - portus:portus

volumes:
  static:
    driver: local
  registry:
    driver: local
  db:
    driver: local
  certificates:
    external: true
